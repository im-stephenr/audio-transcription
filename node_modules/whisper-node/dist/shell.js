"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
// docs: https://www.npmjs.com/package/shelljs
var shell = require('shelljs');
// docs: https://github.com/ggerganov/whisper.cpp
const WHISPER_CPP_PATH = "/lib/whisper.cpp";
const WHISPER_CPP_MAIN_PATH = "./main";
// passed to shelljs exec
const shellOptions = {
    silent: true,
    async: false
};
// return shelljs process
function whisperShell(command, options) {
    return __awaiter(this, void 0, void 0, function* () {
        return new Promise((resolve, reject) => {
            shell.exec(command, options ? options : shellOptions, (code, stdout, stderr) => {
                if (code === 0)
                    resolve(stdout);
                else
                    reject(stderr);
            }).catch((e) => reject(e));
        });
    });
}
exports.default = whisperShell;
// change working directory to whisper submodule
shell.cd(__dirname + WHISPER_CPP_PATH);
// ensure command exists in local path
if (!shell.which(WHISPER_CPP_MAIN_PATH)) {
    shell.echo("[whisper-node] Problem. whisper.pp not initialized. Current shelljs directory: ", __dirname);
    shell.echo("[whisper-node] Attempting to run 'make' command in /whisper directory...");
    shell.exec("make", shellOptions);
    if (!shell.which(WHISPER_CPP_MAIN_PATH)) {
        console.log("[whisper-node] Problem. 'make' command failed. Please run 'make' command in /whisper directory. Current shelljs directory: ", __dirname);
        process.exit(1);
    }
    else {
        console.log("[whisper-node] 'make' command successful. Current shelljs directory: ", __dirname);
    }
}
//# sourceMappingURL=shell.js.map