"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createCppCommand = void 0;
// return as syntax for whisper cpp command
const createCppCommand = ({ filePath, model, options }) => `./main ${getFlags(options)} -m ./models/${models[model]} -f ${filePath} `;
exports.createCppCommand = createCppCommand;
// list of models: https://github.com/ggerganov/whisper.cpp/#more-audio-samples
const models = {
    "en_base": "ggml-base.en.bin",
    "en_medium": "ggml-medium.en.bin",
    "large": "ggml-large.bin"
};
// options list: https://github.com/ggerganov/whisper.cpp/blob/master/README.md?plain=1#L91
const getFlags = (flags) => {
    let s = "";
    // output files
    if (flags["gen-file-txt"])
        s += " -otxt";
    if (flags["gen-file-subtitle"])
        s += " -osrt";
    if (flags["gen-file-vtt"])
        s += " -ovtt";
    // timestamps
    if (flags["timestamp-size"])
        s += " -ml " + flags["timestamp-size"];
    if (flags["word-timestamps"])
        s += " -ml 1";
    return s;
};
//# sourceMappingURL=whisper.js.map